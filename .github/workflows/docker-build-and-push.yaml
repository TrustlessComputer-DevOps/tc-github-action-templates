name: Docker develop build

on:
  workflow_call:
    inputs:
      DOCKER_REGISTRY_HOST:
        required: false
        type: string
        default: 'gcr.io'
      DOCKER_IMAGE_PATH:
        required: false
        type: string
        default: 'trustless-computer-devops'
      DOCKER_IMAGE_NAME:
        required: true
        type: string
      DOCKERFILE_NAME:
        required: true
        type: string
    secrets:
      GCLOUD_DEV_SERVICE_ACCOUNT_JSON:
        required: true

jobs:
  build-and-push-to-gcr:
    runs-on: ubuntu-latest
    concurrency:
      group: build_develop_${{inputs.DOCKER_IMAGE_NAME}}
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v3
      - name: Get the tag name
        id: get_tag_name
        run: |
          if [[ $GITHUB_REF_NAME == 'staging' || $GITHUB_REF_NAME == 'develop' ]]; then
            short_sha=$(echo $GITHUB_SHA | head -c 7)
            echo "IMAGE_TAG=${GITHUB_REF_NAME}-${short_sha}" >> $GITHUB_ENV
            echo "BUILD_ENV=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
            echo "BUILD_ENV=production" >> $GITHUB_ENV
          fi

      - name: Setup google auth
        id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ secrets.GCLOUD_DEV_SERVICE_ACCOUNT_JSON }}

      - name: Setup docker
        uses: docker/setup-buildx-action@v2

      - name: Authenticate docker
        run: |
          gcloud auth configure-docker --quiet gcr.io

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ inputs.DOCKERFILE_NAME }}
          push: true
          tags: |
            ${{ inputs.DOCKER_REGISTRY_HOST }}/${{ inputs.DOCKER_IMAGE_PATH }}/${{ inputs.DOCKER_IMAGE_NAME }}:latest
            ${{ inputs.DOCKER_REGISTRY_HOST }}/${{ inputs.DOCKER_IMAGE_PATH }}/${{ inputs.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: BUILD_ENV=${{ env.BUILD_ENV }}
